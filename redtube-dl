#!/bin/bash

CMD=`basename $0`

show_help()
{
    echo "Usage: $CMD <URL>"
}

find_unique_filename()
{
    UNIQUE_FILENAME_VAR=$1
    FILENAME=$2
    if [ -f $FILENAME ]; then
        COUNTER=0
        while [ -f $FILENAME ]; do
            echo "File exists! ==> `basename $FILENAME`"
            FILENAME=`echo $FILENAME | sed "s#[0-9]\+\.#$COUNTER\.#g"`
            COUNTER=$(( $COUNTER + 1 ))
        done
        echo "Saving as.. ==> `basename $FILENAME`"
    fi
    $UNIQUE_FILENAME_VAR=$FILENAME
}

if [ $# -ne 1 ]; then
    echo "fail! -- expect 1 arguments! ==> $@"
    show_help
    exit 1
fi

URL=$1

echo ""
echo "Extracting video URL from.. ==> $URL"
EXTRACTED_URL=`curl $URL       | # download HTML using curl
        tr -d '\n'             | # remove carriage returns
        sed 's#</#\n</#g'      | # tokenize by HTML tag
        grep 'mp4_url='        | # locate lines with "mp4_url="
        tr '\n' @              | # tokenize by line
        cut -d@ -f1            | # isolate first instance
        sed 's/^.*mp4_url=//g' | # remove everything before "mp4_url="
        sed 's/&.*$//g'        | # remove everything after "&"
        sed 's#\%3A#:#g'       | # replace %3A --> :
        sed 's#\%3B#;#g'       | # replace %3B --> ;
        sed 's#\%2F#/#g'       | # replace %2F --> /
        sed 's#\%3F#?#g'       | # replace %3F --> ?
        sed 's#\%2C#,#g'       | # replace %2C --> ,
        sed 's#\%3D#=#g'       | # replace %3D --> =
        sed 's#\%26#\&#g'`       # replace %26 --> &

echo ""
echo "Downloading video from.. ==> $EXTRACTED_URL"
LOCAL_FILE="`pwd`/`basename $URL`.mp4"
find_unique_filename LOCAL_FILE $LOCAL_FILE
curl $EXTRACTED_URL > $LOCAL_FILE

echo ""
echo "Download complete! ==> $LOCAL_FILE"
